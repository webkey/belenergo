@import ../utils/variables
@import ../utils/mixins
@import ../../libs/include-media/dist/include-media

.wrapper
	margin: 0 auto
	min-height: 100vh
	overflow: hidden
	position: relative
	padding-top: $header-height

	&::before, &::after
		+pseudo()

	&::before
		min-height: 1100px
		+position(0)
		+size(100%)
		+linear-gradient(to top, $bg-color 0, $bg-color 50%, transparentize($bg-color, 0.5) 100%)
		z-index: -2

	&::after
		right: 0
		bottom: 0
		background: url(../../img/bg-page-bottom.png) no-repeat
		background-size: contain
		height: 737px
		width: 734px
		z-index: -1

.main
	position: relative
	width: 100%
	float: left
	clear: both
	z-index: 4

.main__holder
	margin: 0 #{$aside-width} 0 #{$sidebar-width}
	min-height: 50px

.content
	padding: #{$layout-spaces} #{$layout-spaces}

	+media('<desk-lg')
		margin-right: 0

	+media('<tab-lg')
		margin-left: 0

.header
	position: fixed
	top: 0
	z-index: 1020
	height: $header-height
	margin: 0 0 0 $sidebar-width
	padding-left: $layout-spaces
	width: calc(100% - #{$sidebar-width})
	box-shadow: 0 1px 0 $border-color
	@if $page-layout-width
		max-width: calc(#{$page-layout-width} - #{$sidebar-width})
	@else
		max-width: calc(100% - #{$sidebar-width})

.sidebar
	position: fixed
	+position(0, 0)
	+size($sidebar-width, 100%)
	z-index: 1001

.aside
	position: relative
	float: right
	margin: 0 0 0 -#{$aside-width}
	width: #{$aside-width}
	padding: #{$layout-spaces} #{$layout-spaces} #{$layout-spaces} 0
	z-index: 999

/* footer (layout)
.footer
	position: relative
	clear: both
	z-index: 5

/* footer common (layout)
.footer-common
	padding: round($layout-spaces) #{$layout-spaces} round($layout-spaces - $footer-nav-horizontal-space)

/* footer common (layout) end

.footer__holder
	$base-width: 100% - #{$sidebar-width}

	&
		left: $sidebar-width
		width: calc(#{$base-width} - #{$aside-width})

	//+media('<desk-lg')
		width: calc(#{$base-width} - #{$aside-width})

	//+media('<tab-lg')
		left: 0
		width: 100%

/* footer (layout) end

.max-wrap
	@if $page-layout-width
		max-width: $page-layout-width + $page-layout-space-horizontal*2

.layout
	//+push-auto
	@if $page-layout-space-horizontal != 0
		+padding-horizontal($page-layout-space-horizontal)

	//+media('<tab-lg')
		.main &
			+padding-horizontal(0)

// выравнивание текстовых элементов на странице статьи (контент обернут в .layout-article)
// и их максимальная ширина
.layout-article
	padding: round($text-layout-space-horizontal) #{$text-layout-space-horizontal} round($text-layout-space-horizontal*1.5)

	+media('<tab-lg')
		padding: round($text-layout-space-horizontal--md*1.5) #{$text-layout-space-horizontal--md} round($text-layout-space-horizontal--md*2)

	+media('<tab-sm')
		padding: round($text-layout-space-horizontal--sm*1.5) #{$text-layout-space-horizontal--sm} round($text-layout-space-horizontal--sm*2)

	p, ul, ol, h2, h3, h4, h5, h6, hr, .layout-text
		max-width: $text-layout-width
		+padding-horizontal(0)
		+push-auto

	.layout-flood
		max-width: $flood-layout-width
		+padding-horizontal(0)
		+push-auto

	// элеметы без отступов по бокам
	// минусовые маржины по горизонтале имеют значение только внутри .layout-article
	.layout-full-width, .layout-wide

		+margin-horizontal(-#{$text-layout-space-horizontal})

		+media('<tab-lg')
			+margin-horizontal(-#{$text-layout-space-horizontal--md})

		+media('<tab-sm')
			+margin-horizontal(-#{$text-layout-space-horizontal--sm})

// максимальная ширина текстовых элементов на внутренней (текстовой) странице
.max-wrap-text
	max-width: #{$text-layout-width + $text-layout-space-horizontal*2}

	+media('<tab-lg')
		max-width: #{$text-layout-width + $text-layout-space-horizontal--md*2}

	+media('<tab-sm')
		max-width: #{$text-layout-width + $text-layout-space-horizontal--sm*2}

// выравнивание текстовых элементов на внутренней (текстовой) странице
// и их максимальная ширина
.layout-text
	max-width: #{$text-layout-width + $text-layout-space-horizontal*2}
	+padding-horizontal($text-layout-space-horizontal)
	+push-auto

	+media('<tab-lg')
		max-width: #{$text-layout-width + $text-layout-space-horizontal--md*2}
		+padding-horizontal($text-layout-space-horizontal--md)

	+media('<tab-sm')
		max-width: #{$text-layout-width + $text-layout-space-horizontal--sm*2}
		+padding-horizontal($text-layout-space-horizontal--sm)

// максимальная ширина альтернативных элементов на внутренней (текстовой) странице
.max-wrap-flood
	max-width: #{$flood-layout-width + $text-layout-space-horizontal*2}

	+media('<tab-lg')
		max-width: #{$flood-layout-width + $text-layout-space-horizontal--md*2}

	+media('<tab-sm')
		max-width: #{$flood-layout-width + $text-layout-space-horizontal--sm*2}

// выравнивание альтернативных элементов на внутренней (текстовой) странице
// и их максимальная ширина
.layout-flood
	max-width: #{$flood-layout-width + $text-layout-space-horizontal*2}
	+padding-horizontal($text-layout-space-horizontal)
	+push-auto

	+media('<tab-lg')
		max-width: #{$flood-layout-width + $text-layout-space-horizontal--md*2}
		+padding-horizontal($text-layout-space-horizontal--md)

	+media('<tab-sm')
		max-width: #{$flood-layout-width + $text-layout-space-horizontal--sm*2}
		+padding-horizontal($text-layout-space-horizontal--sm)

	p, ul, ol, h1, h2, h3, h4, h5, h6, hr
		max-width: none

// элеметы с отступами по бокам
.layout-wide
	+padding-horizontal($text-layout-space-horizontal)

	+media('<tab-lg')
		+padding-horizontal($text-layout-space-horizontal--md)

	+media('<tab-sm')
		+padding-horizontal($text-layout-space-horizontal--sm)

	p, ul, ol, h1, h2, h3, h4, h5, h6, hr
		max-width: none

// элеметы без отступов по бокам
.layout-full-width

	p, ul, ol, h1, h2, h3, h4, h5, h6, hr
		max-width: none